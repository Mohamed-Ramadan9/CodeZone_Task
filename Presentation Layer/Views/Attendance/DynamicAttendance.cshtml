@model Business_Layer.ViewModels.Attendance.AttendanceRecordViewModel

@{
    ViewBag.Title = "Dynamic Attendance Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <h2>Dynamic Attendance Management</h2>
            
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="employeeSelect" class="form-label">Select Employee</label>
                                <select id="employeeSelect" class="form-select">
                                    <option value="">-- Select Employee --</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="dateInput" class="form-label">Select Date</label>
                                <input type="date" id="dateInput" class="form-control" max="@DateTime.Today.ToString("yyyy-MM-dd")" />
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-12">
                            <div class="alert alert-info" id="statusAlert" style="display: none;">
                                <strong>Current Status:</strong> <span id="currentStatus">Not Marked</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-12">
                            <div class="btn-group" role="group" id="attendanceButtons" style="display: none;">
                                <button type="button" class="btn btn-success" id="markPresent">Mark Present</button>
                                <button type="button" class="btn btn-danger" id="markAbsent">Mark Absent</button>
                                <button type="button" class="btn btn-warning" id="markNotMarked">Mark Not Marked</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Calendar</h5>
                </div>
                <div class="card-body">
                    <div id="calendar"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <script>
        $(document).ready(function() {
            let currentEmployeeCode = null;
            let currentDate = null;
            
            // Initialize date input with today's date
            const today = new Date().toISOString().split('T')[0];
            $('#dateInput').val(today);
            
            // Load employees
            loadEmployees();
            
            // Event handlers
            $('#employeeSelect').change(function() {
                currentEmployeeCode = $(this).val();
                updateAttendanceStatus();
            });
            
            $('#dateInput').change(function() {
                currentDate = $(this).val();
                updateAttendanceStatus();
            });
            
            // Attendance button handlers
            $('#markPresent').click(function() {
                updateAttendance('Present');
            });
            
            $('#markAbsent').click(function() {
                updateAttendance('Absent');
            });
            
            $('#markNotMarked').click(function() {
                updateAttendance('NotMarked');
            });
            
            // Initialize calendar
            initializeCalendar();
            
            function loadEmployees() {
                $.ajax({
                    url: '/Employee/GetEmployeesForDropdown',
                    type: 'GET',
                    success: function(data) {
                        const select = $('#employeeSelect');
                        select.empty();
                        select.append('<option value="">-- Select Employee --</option>');
                        
                        data.forEach(function(employee) {
                            select.append(`<option value="${employee.employeeCode}">${employee.displayText}</option>`);
                        });
                    },
                    error: function() {
                        console.error('Failed to load employees');
                    }
                });
            }
            
            function updateAttendanceStatus() {
                if (!currentEmployeeCode || !currentDate) {
                    $('#statusAlert').hide();
                    $('#attendanceButtons').hide();
                    return;
                }
                
                $.ajax({
                    url: '/Attendance/GetAttendanceStatus',
                    type: 'GET',
                    data: {
                        employeeCode: currentEmployeeCode,
                        date: currentDate
                    },
                    success: function(data) {
                        $('#currentStatus').text(data.status);
                        $('#statusAlert').show();
                        $('#attendanceButtons').show();
                        
                        // Update calendar
                        updateCalendar();
                    },
                    error: function() {
                        console.error('Failed to get attendance status');
                    }
                });
            }
            
            function updateAttendance(status) {
                if (!currentEmployeeCode || !currentDate) {
                    alert('Please select both employee and date');
                    return;
                }
                
                $.ajax({
                    url: '/Attendance/UpdateAttendance',
                    type: 'POST',
                    data: {
                        employeeCode: currentEmployeeCode,
                        date: currentDate,
                        status: status
                    },
                    success: function(data) {
                        if (data.success) {
                            $('#currentStatus').text(status);
                            updateCalendar();
                            showAlert('success', 'Attendance updated successfully');
                        } else {
                            showAlert('danger', data.message || 'Failed to update attendance');
                        }
                    },
                    error: function() {
                        showAlert('danger', 'Failed to update attendance');
                    }
                });
            }
            
            function initializeCalendar() {
                const today = new Date();
                const currentMonth = today.getMonth();
                const currentYear = today.getFullYear();
                
                // Create calendar HTML
                let calendarHtml = '<table class="table table-bordered table-sm">';
                calendarHtml += '<thead><tr><th colspan="7" class="text-center">' + 
                    new Date(currentYear, currentMonth).toLocaleDateString('en-US', { month: 'long', year: 'numeric' }) + 
                    '</th></tr>';
                calendarHtml += '<tr><th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th>Fri</th><th>Sat</th></tr></thead>';
                calendarHtml += '<tbody>';
                
                const firstDay = new Date(currentYear, currentMonth, 1);
                const lastDay = new Date(currentYear, currentMonth + 1, 0);
                const startDate = new Date(firstDay);
                startDate.setDate(startDate.getDate() - firstDay.getDay());
                
                for (let week = 0; week < 6; week++) {
                    calendarHtml += '<tr>';
                    for (let day = 0; day < 7; day++) {
                        const currentDate = new Date(startDate);
                        currentDate.setDate(startDate.getDate() + (week * 7) + day);
                        
                        const isCurrentMonth = currentDate.getMonth() === currentMonth;
                        const isToday = currentDate.toDateString() === today.toDateString();
                        const isFuture = currentDate > today;
                        
                        let className = 'calendar-day';
                        if (isToday) className += ' table-primary';
                        if (isFuture) className += ' text-muted';
                        if (!isCurrentMonth) className += ' text-muted';
                        
                        calendarHtml += `<td class="${className}" data-date="${currentDate.toISOString().split('T')[0]}">${currentDate.getDate()}</td>`;
                    }
                    calendarHtml += '</tr>';
                }
                calendarHtml += '</tbody></table>';
                
                $('#calendar').html(calendarHtml);
                
                // Add click handlers to calendar days
                $('.calendar-day').click(function() {
                    const date = $(this).data('date');
                    const isFuture = new Date(date) > today;
                    
                    if (!isFuture) {
                        $('#dateInput').val(date);
                        currentDate = date;
                        updateAttendanceStatus();
                    }
                });
            }
            
            function updateCalendar() {
                // This would update calendar colors based on attendance
                // For now, just refresh the calendar
                initializeCalendar();
            }
            
            function showAlert(type, message) {
                const alertHtml = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>`;
                
                // Remove existing alerts
                $('.alert').remove();
                
                // Add new alert
                $('.container-fluid').prepend(alertHtml);
                
                // Auto-dismiss after 3 seconds
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 3000);
            }
        });
    </script>
    
    <style>
        .calendar-day {
            cursor: pointer;
            text-align: center;
            padding: 5px;
        }
        
        .calendar-day:hover {
            background-color: #f8f9fa;
        }
        
        .calendar-day.text-muted {
            cursor: not-allowed;
        }
    </style>
} 